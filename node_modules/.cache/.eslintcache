[{"/Users/mmc/Documents/GitHub/React-project-app/src/index.js":"1","/Users/mmc/Documents/GitHub/React-project-app/src/App.js":"2","/Users/mmc/Documents/GitHub/React-project-app/src/reportWebVitals.js":"3","/Users/mmc/Documents/GitHub/React-project-app/src/Weather.js":"4","/Users/mmc/Documents/GitHub/React-project-app/src/Loading.js":"5","/Users/mmc/Documents/GitHub/React-project-app/src/FormattedDate.js":"6","/Users/mmc/Documents/GitHub/React-project-app/src/FormattedTime.js":"7","/Users/mmc/Documents/GitHub/React-project-app/src/WeatherInfo.js":"8"},{"size":543,"mtime":1616758252717,"results":"9","hashOfConfig":"10"},{"size":206,"mtime":1617050722375,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1616673844459,"results":"12","hashOfConfig":"10"},{"size":6446,"mtime":1617055734717,"results":"13","hashOfConfig":"10"},{"size":1518,"mtime":1616938612649,"results":"14","hashOfConfig":"10"},{"size":505,"mtime":1617039676078,"results":"15","hashOfConfig":"10"},{"size":249,"mtime":1617037323951,"results":"16","hashOfConfig":"10"},{"size":1594,"mtime":1617055494475,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"12k6t10",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/mmc/Documents/GitHub/React-project-app/src/index.js",[],["36","37"],"/Users/mmc/Documents/GitHub/React-project-app/src/App.js",[],"/Users/mmc/Documents/GitHub/React-project-app/src/reportWebVitals.js",[],"/Users/mmc/Documents/GitHub/React-project-app/src/Weather.js",["38","39"],"import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"./Weather.css\";\nimport Loading from \"./Loading\";\nimport FormattedDate from \"./FormattedDate\";\nimport FormattedTime from \"./FormattedTime\";\nimport WeatherInfo from \"./WeatherInfo\";\nimport ReactAnimatedWeather from \"react-animated-weather\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faLocationArrow,\n  faPowerOff,\n  faSearch,\n  faLongArrowAltUp,\n  faLongArrowAltDown,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nconst rainIcon = <ReactAnimatedWeather icon='RAIN' size={30} color='#EE9945' />;\nconst clearNight = (\n  <ReactAnimatedWeather icon='CLEAR_NIGHT' size={30} color='#EE9945' />\n);\nconst windIcon = <ReactAnimatedWeather icon='WIND' size={30} color='#EE9945' />;\n\n//App starts here:\n\nexport default function Weather(props) {\n  const [ready, setReady] = useState(false);\n  const [weatherData, setWeatherData] = useState({});\n\n  //Handle function for the API's Response\n  function handleResponse(response) {\n    setWeatherData({\n      temperature: Math.round(response.data.main.temp),\n      maxTemp: Math.round(response.data.main.temp_max),\n      minTemp: Math.round(response.data.main.temp_min),\n      cityResponse: response.data.name,\n      description: response.data.weather[0].description.toUpperCase(),\n      humidity: response.data.main.humidity,\n      wind: Math.round(response.data.wind.speed),\n      date: new Date(response.data.dt * 1000),\n    });\n    setReady(true);\n  }\n\n  //returns\n  if (ready) {\n    return (\n      <div className='weather'>\n        <div className='weather-container col-md-6 col-lg-5'>\n          <div className='row'>\n            <div className='col-md-12 col-lg-12 col-12 text-center'>\n              <form className='my-3'>\n                <input\n                  type='text'\n                  placeholder='Enter a city'\n                  className='search-bar'\n                />\n                <button className='small-btn'>\n                  <FontAwesomeIcon icon={faSearch} size='1x' />\n                </button>\n                <button className='small-btn'>\n                  <FontAwesomeIcon icon={faLocationArrow} size='1x' />\n                </button>\n              </form>\n            </div>\n          </div>\n          <WeatherInfo data={weatherData} />\n          <div className='row mt-4'>\n            <div className='col-md-12'>\n              <ul className='forecast mt-5'>\n                <li>\n                  <p className='temps'>\n                    {\" \"}\n                    16:00 <span className='small-icon'>{rainIcon}</span>\n                    <span>\n                      <FontAwesomeIcon icon={faLongArrowAltUp} size='xs' />{\" \"}\n                      {weatherData.maxTemp}°\n                    </span>\n                    {\"\"} / {\"\"}\n                    <span>\n                      <FontAwesomeIcon icon={faLongArrowAltDown} size='xs' />{\" \"}\n                      {weatherData.minTemp}°\n                    </span>\n                  </p>\n                </li>\n                <li>\n                  <p className='temps'>\n                    {\" \"}\n                    19:00 <span className='small-icon'>{clearNight}</span>\n                    <span>\n                      <FontAwesomeIcon icon={faLongArrowAltUp} size='xs' /> 17°\n                    </span>\n                    {\"\"} / {\"\"}\n                    <span>\n                      <FontAwesomeIcon icon={faLongArrowAltDown} size='xs' />{\" \"}\n                      12°\n                    </span>\n                  </p>\n                </li>\n                <li>\n                  <p className='temps'>\n                    {\" \"}\n                    22:00 <span className='small-icon'>{windIcon}</span>\n                    <span>\n                      <FontAwesomeIcon icon={faLongArrowAltUp} size='xs' /> 15°\n                    </span>\n                    {\"\"} / {\"\"}\n                    <span>\n                      <FontAwesomeIcon icon={faLongArrowAltDown} size='xs' />{\" \"}\n                      10°\n                    </span>\n                  </p>\n                </li>\n                <li>\n                  <p className='temps'>\n                    {\" \"}\n                    01:00 <span className='small-icon'>{clearNight}</span>\n                    <span>\n                      <FontAwesomeIcon icon={faLongArrowAltUp} size='xs' /> 15°\n                    </span>\n                    {\"\"} / {\"\"}\n                    <span>\n                      <FontAwesomeIcon icon={faLongArrowAltDown} size='xs' />{\" \"}\n                      10°\n                    </span>\n                  </p>\n                </li>\n                <li>\n                  <p className='temps'>\n                    {\" \"}\n                    04:00 <span className='small-icon'>{rainIcon}</span>\n                    <span>\n                      <FontAwesomeIcon icon={faLongArrowAltUp} size='xs' /> 15°\n                    </span>\n                    {\"\"} / {\"\"}\n                    <span>\n                      <FontAwesomeIcon icon={faLongArrowAltDown} size='xs' />{\" \"}\n                      10°\n                    </span>\n                  </p>\n                </li>\n                <li>\n                  <p className='temps'>\n                    {\" \"}\n                    07:00 <span className='small-icon'>{windIcon}</span>\n                    <span>\n                      <FontAwesomeIcon icon={faLongArrowAltUp} size='xs' /> 15°\n                    </span>\n                    {\"\"} / {\"\"}\n                    <span>\n                      <FontAwesomeIcon icon={faLongArrowAltDown} size='xs' />{\" \"}\n                      10°\n                    </span>\n                  </p>\n                </li>\n              </ul>\n            </div>\n          </div>\n\n          <div className='row'>\n            <div className='col-12 mt-5'>\n              <button className='lightBtn mt-5'>\n                <FontAwesomeIcon icon={faPowerOff} size='3x' />\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  } else {\n    //Call to the API with AXIOS\n    const apiKey = \"0603e85b4ce086e6bb52d7cdc7bcffb5\";\n    let apiUrl = `https://api.openweathermap.org/data/2.5/weather?q=${props.defaultCity}&appid=${apiKey}&units=metric&cnt=3`;\n    axios.get(apiUrl).then(handleResponse);\n\n    //Returns\n    return (\n      <div className='weather'>\n        <Loading />\n      </div>\n    );\n  }\n}\n","/Users/mmc/Documents/GitHub/React-project-app/src/Loading.js",[],"/Users/mmc/Documents/GitHub/React-project-app/src/FormattedDate.js",[],"/Users/mmc/Documents/GitHub/React-project-app/src/FormattedTime.js",[],"/Users/mmc/Documents/GitHub/React-project-app/src/WeatherInfo.js",[],{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":5,"column":8,"nodeType":"46","messageId":"47","endLine":5,"endColumn":21},{"ruleId":"44","severity":1,"message":"48","line":6,"column":8,"nodeType":"46","messageId":"47","endLine":6,"endColumn":21},"no-native-reassign",["49"],"no-negated-in-lhs",["50"],"no-unused-vars","'FormattedDate' is defined but never used.","Identifier","unusedVar","'FormattedTime' is defined but never used.","no-global-assign","no-unsafe-negation"]