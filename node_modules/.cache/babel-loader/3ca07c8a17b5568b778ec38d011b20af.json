{"ast":null,"code":"var _jsxFileName = \"/Users/mmc/Documents/GitHub/React-project-app/src/Forecast.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLongArrowAltUp, faLongArrowAltDown } from \"@fortawesome/free-solid-svg-icons\";\nimport ReactAnimatedWeather from \"react-animated-weather\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Forecast(props) {\n  _s();\n\n  const [forecast, setForecast] = useState([]);\n\n  for (let index = 0; index < 6; index++) {\n    setForecast(props.data[index]);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"forecastContainer\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"temps\",\n        children: [\" \", \"`16:00`\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"small-icon\",\n          children: /*#__PURE__*/_jsxDEV(ReactAnimatedWeather, {\n            icon: \"PARTLY_CLOUDY_DAY\",\n            color: \"#EE9945\",\n            size: 30\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faLongArrowAltUp,\n            size: \"xs\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, this), \" \", Math.round(forecast.main.temp_max), \"\\xB0\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), \"\", \" / \", \"\", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faLongArrowAltDown,\n            size: \"xs\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this), \" \", Math.round(forecast.main.temp_min), \"\\xB0\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n_s(Forecast, \"i0vJjp72roB6ll5FdJwThp2a2Ns=\");\n\n_c = Forecast;\n\nvar _c;\n\n$RefreshReg$(_c, \"Forecast\");","map":{"version":3,"sources":["/Users/mmc/Documents/GitHub/React-project-app/src/Forecast.js"],"names":["React","useState","FontAwesomeIcon","faLongArrowAltUp","faLongArrowAltDown","ReactAnimatedWeather","Forecast","props","forecast","setForecast","index","data","Math","round","main","temp_max","temp_min"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SACEC,gBADF,EAEEC,kBAFF,QAGO,mCAHP;AAIA,OAAOC,oBAAP,MAAiC,wBAAjC;;AAEA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AACtC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,EAAD,CAAxC;;AAEA,OAAK,IAAIS,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAG,CAA5B,EAA+BA,KAAK,EAApC,EAAwC;AACtCD,IAAAA,WAAW,CAACF,KAAK,CAACI,IAAN,CAAWD,KAAX,CAAD,CAAX;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA,6BACE;AAAG,QAAA,SAAS,EAAC,OAAb;AAAA,mBACG,GADH,aAEU,GAFV,eAGE;AAAM,UAAA,SAAS,EAAC,YAAhB;AAAA,iCAEI,QAAC,oBAAD;AACE,YAAA,IAAI,EAAC,mBADP;AAEE,YAAA,KAAK,EAAC,SAFR;AAGE,YAAA,IAAI,EAAE;AAHR;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,gBAHF,eAYE;AAAA,kCACE,QAAC,eAAD;AAAiB,YAAA,IAAI,EAAEP,gBAAvB;AAAyC,YAAA,IAAI,EAAC;AAA9C;AAAA;AAAA;AAAA;AAAA,kBADF,EACwD,GADxD,EAEGS,IAAI,CAACC,KAAL,CAAWL,QAAQ,CAACM,IAAT,CAAcC,QAAzB,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,gBAZF,EAgBG,EAhBH,SAgBU,EAhBV,eAiBE;AAAA,kCACE,QAAC,eAAD;AAAiB,YAAA,IAAI,EAAEX,kBAAvB;AAA2C,YAAA,IAAI,EAAC;AAAhD;AAAA;AAAA;AAAA;AAAA,kBADF,EAC0D,GAD1D,EAEGQ,IAAI,CAACC,KAAL,CAAWL,QAAQ,CAACM,IAAT,CAAcE,QAAzB,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,gBAjBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AA0BD;AACF;;GAhCuBV,Q;;KAAAA,Q","sourcesContent":["import React, { useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faLongArrowAltUp,\n  faLongArrowAltDown,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport ReactAnimatedWeather from \"react-animated-weather\";\n\nexport default function Forecast(props) {\n  const [forecast, setForecast] = useState([]);\n\n  for (let index = 0; index < 6; index++) {\n    setForecast(props.data[index]);\n    return (\n      <div className='forecastContainer'>\n        <p className='temps'>\n          {\" \"}\n          `16:00`{\" \"}\n          <span className='small-icon'>\n            {\n              <ReactAnimatedWeather\n                icon='PARTLY_CLOUDY_DAY'\n                color='#EE9945'\n                size={30}\n              />\n            }\n          </span>\n          <span>\n            <FontAwesomeIcon icon={faLongArrowAltUp} size='xs' />{\" \"}\n            {Math.round(forecast.main.temp_max)}°\n          </span>\n          {\"\"} / {\"\"}\n          <span>\n            <FontAwesomeIcon icon={faLongArrowAltDown} size='xs' />{\" \"}\n            {Math.round(forecast.main.temp_min)}°\n          </span>\n        </p>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}