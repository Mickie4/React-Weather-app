{"ast":null,"code":"var _jsxFileName = \"/Users/mmc/Documents/GitHub/React-project-app/src/Forecast.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLongArrowAltUp, faLongArrowAltDown } from \"@fortawesome/free-solid-svg-icons\";\nimport ReactAnimatedWeather from \"react-animated-weather\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Forecast(props) {\n  _s();\n\n  const [forecast, setForecast] = useState([]);\n  let city = props.city;\n  const apiKey = \"c6457dceef34bc5b29fe61bd0c8168e1\";\n  let apiForecast = `https://api.openweathermap.org/data/2.5/forecast?q=${city}&units=metric&appid=${apiKey}`;\n\n  function handleResponse(response) {\n    setForecast(response);\n    console.log(response);\n  }\n\n  axios.get(apiForecast).then(handleResponse);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"forecastContainer\",\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"temps\",\n      children: [\" \", \"`16:00`\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"small-icon\",\n        children: /*#__PURE__*/_jsxDEV(ReactAnimatedWeather, {\n          icon: \"PARTLY_CLOUDY_DAY\",\n          color: \"#EE9945\",\n          size: 30\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faLongArrowAltUp,\n          size: \"xs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), \" \", 1, \"\\xB0\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), \"\", \" / \", \"\", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faLongArrowAltDown,\n          size: \"xs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), \" \", 1, \"\\xB0\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Forecast, \"i0vJjp72roB6ll5FdJwThp2a2Ns=\");\n\n_c = Forecast;\n\nvar _c;\n\n$RefreshReg$(_c, \"Forecast\");","map":{"version":3,"sources":["/Users/mmc/Documents/GitHub/React-project-app/src/Forecast.js"],"names":["React","useState","axios","FontAwesomeIcon","faLongArrowAltUp","faLongArrowAltDown","ReactAnimatedWeather","Forecast","props","forecast","setForecast","city","apiKey","apiForecast","handleResponse","response","console","log","get","then"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SACEC,gBADF,EAEEC,kBAFF,QAGO,mCAHP;AAIA,OAAOC,oBAAP,MAAiC,wBAAjC;;AAEA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AACtC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,EAAD,CAAxC;AACA,MAAIU,IAAI,GAAGH,KAAK,CAACG,IAAjB;AACA,QAAMC,MAAM,GAAG,kCAAf;AACA,MAAIC,WAAW,GAAI,sDAAqDF,IAAK,uBAAsBC,MAAO,EAA1G;;AAEA,WAASE,cAAT,CAAwBC,QAAxB,EAAkC;AAChCL,IAAAA,WAAW,CAACK,QAAD,CAAX;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACD;;AAEDb,EAAAA,KAAK,CAACgB,GAAN,CAAUL,WAAV,EAAuBM,IAAvB,CAA4BL,cAA5B;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA,2BACE;AAAG,MAAA,SAAS,EAAC,OAAb;AAAA,iBACG,GADH,aAEU,GAFV,eAGE;AAAM,QAAA,SAAS,EAAC,YAAhB;AAAA,+BAEI,QAAC,oBAAD;AACE,UAAA,IAAI,EAAC,mBADP;AAEE,UAAA,KAAK,EAAC,SAFR;AAGE,UAAA,IAAI,EAAE;AAHR;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,cAHF,eAYE;AAAA,gCACE,QAAC,eAAD;AAAiB,UAAA,IAAI,EAAEV,gBAAvB;AAAyC,UAAA,IAAI,EAAC;AAA9C;AAAA;AAAA;AAAA;AAAA,gBADF,OACyD,CADzD;AAAA;AAAA;AAAA;AAAA;AAAA,cAZF,EAeG,EAfH,SAeU,EAfV,eAgBE;AAAA,gCACE,QAAC,eAAD;AAAiB,UAAA,IAAI,EAAEC,kBAAvB;AAA2C,UAAA,IAAI,EAAC;AAAhD;AAAA;AAAA;AAAA;AAAA,gBADF,OAC2D,CAD3D;AAAA;AAAA;AAAA;AAAA;AAAA,cAhBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD;;GApCuBE,Q;;KAAAA,Q","sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faLongArrowAltUp,\n  faLongArrowAltDown,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport ReactAnimatedWeather from \"react-animated-weather\";\n\nexport default function Forecast(props) {\n  const [forecast, setForecast] = useState([]);\n  let city = props.city;\n  const apiKey = \"c6457dceef34bc5b29fe61bd0c8168e1\";\n  let apiForecast = `https://api.openweathermap.org/data/2.5/forecast?q=${city}&units=metric&appid=${apiKey}`;\n\n  function handleResponse(response) {\n    setForecast(response);\n    console.log(response);\n  }\n\n  axios.get(apiForecast).then(handleResponse);\n  return (\n    <div className='forecastContainer'>\n      <p className='temps'>\n        {\" \"}\n        `16:00`{\" \"}\n        <span className='small-icon'>\n          {\n            <ReactAnimatedWeather\n              icon='PARTLY_CLOUDY_DAY'\n              color='#EE9945'\n              size={30}\n            />\n          }\n        </span>\n        <span>\n          <FontAwesomeIcon icon={faLongArrowAltUp} size='xs' /> {1}°\n        </span>\n        {\"\"} / {\"\"}\n        <span>\n          <FontAwesomeIcon icon={faLongArrowAltDown} size='xs' /> {1}°\n        </span>\n      </p>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}