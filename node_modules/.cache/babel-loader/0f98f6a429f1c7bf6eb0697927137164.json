{"ast":null,"code":"var _jsxFileName = \"/Users/mmc/Documents/GitHub/React-project-app/src/components/WeatherForecast.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"../styles/WeatherForecast.css\";\nimport WeatherIcon from \"./WeatherIcon\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLongArrowAltUp, faLongArrowAltDown } from \"@fortawesome/free-solid-svg-icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function WeatherForecast(props) {\n  _s();\n\n  let [loaded, setLoaded] = useState(false);\n  let [forecast, setForecast] = useState(null);\n  const apiKey = \"17f56a92dfdfe63b71c98d96a2a4942a\"; //c6457dceef34bc5b29fe61bd0c8168e1, 0603e85b4ce086e6bb52d7cdc7bcffb5, 17f56a92dfdfe63b71c98d96a2a4942a, 5f472b7acba333cd8a035ea85a0d4d4c\n\n  let lon = props.coordinates.lon;\n  let lat = props.coordinates.lat;\n  let apiUrl = `https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&appid=${apiKey}&units=metric`;\n\n  function handleResponse(response) {\n    setForecast(response.data.daily);\n    setLoaded(true);\n  }\n\n  if (loaded && forecast.lat === lat && forecast.lon === lon) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"weatherForecast\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"weatherForecast-day\",\n            children: \"Thu\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(WeatherIcon, {\n            code: \"01d\",\n            size: 40\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"weatherForecast-temps\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"temp-max\",\n              children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faLongArrowAltUp,\n                size: \"xs\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 33,\n                columnNumber: 17\n              }, this), forecast[0].temp.max, \"\\xB0\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"temp-min\",\n              children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faLongArrowAltDown,\n                size: \"xs\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 37,\n                columnNumber: 17\n              }, this), \"10\\xB0\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this);\n  } else {\n    axios.get(apiUrl).then(handleResponse);\n    return \"Loading\";\n  }\n}\n\n_s(WeatherForecast, \"20/pdcvQnLtcZUd5Lz9vhTDggVQ=\");\n\n_c = WeatherForecast;\n\nvar _c;\n\n$RefreshReg$(_c, \"WeatherForecast\");","map":{"version":3,"sources":["/Users/mmc/Documents/GitHub/React-project-app/src/components/WeatherForecast.js"],"names":["React","useState","axios","WeatherIcon","FontAwesomeIcon","faLongArrowAltUp","faLongArrowAltDown","WeatherForecast","props","loaded","setLoaded","forecast","setForecast","apiKey","lon","coordinates","lat","apiUrl","handleResponse","response","data","daily","temp","max","get","then"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,+BAAP;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SACEC,gBADF,EAEEC,kBAFF,QAGO,mCAHP;;AAKA,eAAe,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAAA;;AAC7C,MAAI,CAACC,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,KAAD,CAAlC;AACA,MAAI,CAACU,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAMY,MAAM,GAAG,kCAAf,CAH6C,CAI7C;;AACA,MAAIC,GAAG,GAAGN,KAAK,CAACO,WAAN,CAAkBD,GAA5B;AACA,MAAIE,GAAG,GAAGR,KAAK,CAACO,WAAN,CAAkBC,GAA5B;AACA,MAAIC,MAAM,GAAI,uDAAsDD,GAAI,QAAOF,GAAI,UAASD,MAAO,eAAnG;;AAEA,WAASK,cAAT,CAAwBC,QAAxB,EAAkC;AAChCP,IAAAA,WAAW,CAACO,QAAQ,CAACC,IAAT,CAAcC,KAAf,CAAX;AACAX,IAAAA,SAAS,CAAC,IAAD,CAAT;AACD;;AACD,MAAID,MAAM,IAAIE,QAAQ,CAACK,GAAT,KAAiBA,GAA3B,IAAkCL,QAAQ,CAACG,GAAT,KAAiBA,GAAvD,EAA4D;AAC1D,wBACE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,KAAf;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,WAAD;AAAa,YAAA,IAAI,EAAC,KAAlB;AAAwB,YAAA,IAAI,EAAE;AAA9B;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAK,YAAA,SAAS,EAAC,uBAAf;AAAA,oCACE;AAAM,cAAA,SAAS,EAAC,UAAhB;AAAA,sCACE,QAAC,eAAD;AAAiB,gBAAA,IAAI,EAAET,gBAAvB;AAAyC,gBAAA,IAAI,EAAC;AAA9C;AAAA;AAAA;AAAA;AAAA,sBADF,EAEGM,QAAQ,CAAC,CAAD,CAAR,CAAYW,IAAZ,CAAiBC,GAFpB;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAKE;AAAM,cAAA,SAAS,EAAC,UAAhB;AAAA,sCACE,QAAC,eAAD;AAAiB,gBAAA,IAAI,EAAEjB,kBAAvB;AAA2C,gBAAA,IAAI,EAAC;AAAhD;AAAA;AAAA;AAAA;AAAA,sBADF;AAAA;AAAA;AAAA;AAAA;AAAA,oBALF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAoBD,GArBD,MAqBO;AACLJ,IAAAA,KAAK,CAACsB,GAAN,CAAUP,MAAV,EAAkBQ,IAAlB,CAAuBP,cAAvB;AACA,WAAO,SAAP;AACD;AACF;;GAtCuBX,e;;KAAAA,e","sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"../styles/WeatherForecast.css\";\nimport WeatherIcon from \"./WeatherIcon\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faLongArrowAltUp,\n  faLongArrowAltDown,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nexport default function WeatherForecast(props) {\n  let [loaded, setLoaded] = useState(false);\n  let [forecast, setForecast] = useState(null);\n  const apiKey = \"17f56a92dfdfe63b71c98d96a2a4942a\";\n  //c6457dceef34bc5b29fe61bd0c8168e1, 0603e85b4ce086e6bb52d7cdc7bcffb5, 17f56a92dfdfe63b71c98d96a2a4942a, 5f472b7acba333cd8a035ea85a0d4d4c\n  let lon = props.coordinates.lon;\n  let lat = props.coordinates.lat;\n  let apiUrl = `https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&appid=${apiKey}&units=metric`;\n\n  function handleResponse(response) {\n    setForecast(response.data.daily);\n    setLoaded(true);\n  }\n  if (loaded && forecast.lat === lat && forecast.lon === lon) {\n    return (\n      <div className='weatherForecast'>\n        <div className='row'>\n          <div className='col'>\n            <div className='weatherForecast-day'>Thu</div>\n            <WeatherIcon code='01d' size={40} />\n            <div className='weatherForecast-temps'>\n              <span className='temp-max'>\n                <FontAwesomeIcon icon={faLongArrowAltUp} size='xs' />\n                {forecast[0].temp.max}°\n              </span>\n              <span className='temp-min'>\n                <FontAwesomeIcon icon={faLongArrowAltDown} size='xs' />\n                10°\n              </span>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  } else {\n    axios.get(apiUrl).then(handleResponse);\n    return \"Loading\";\n  }\n}\n"]},"metadata":{},"sourceType":"module"}