{"ast":null,"code":"var _jsxFileName = \"/Users/mmc/Documents/GitHub/React-project-app/src/components/Weather.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"../styles/Weather.css\";\nimport Loading from \"./Loading\";\nimport WeatherInfo from \"./WeatherInfo\";\nimport WeatherForecast from \"./WeatherForecast\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLocationArrow, faSearch } from \"@fortawesome/free-solid-svg-icons\"; //App starts here:\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Weather(props) {\n  _s();\n\n  const [ready, setReady] = useState(false);\n  const [weatherData, setWeatherData] = useState({});\n  const [city, setCity] = useState(props.defaultCity);\n  const [unit, setUnit] = useState(\"celsius\");\n  const apiKey = \"5f472b7acba333cd8a035ea85a0d4d4c\"; //c6457dceef34bc5b29fe61bd0c8168e1, 0603e85b4ce086e6bb52d7cdc7bcffb5, 17f56a92dfdfe63b71c98d96a2a4942a, 5f472b7acba333cd8a035ea85a0d4d4c\n\n  let apiUrl = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric`; //Geolocation button\n\n  function currentLocation(response) {\n    let latitude = response.coords.latitude;\n    let longitude = response.coords.longitude;\n    let apilGeolcationEnd = \"https://api.openweathermap.org/data/2.5/weather\";\n    let apiUrl = `${apilGeolcationEnd}?lat=${latitude}&lon=${longitude}&appid=${apiKey}&units=metric`;\n    axios.get(apiUrl).then(handleResponse);\n  }\n\n  function getLocation(event) {\n    event.preventDefault();\n    navigator.geolocation.getCurrentPosition(currentLocation);\n  } //Handle function for the API's Response\n\n\n  function handleResponse(response) {\n    setWeatherData({\n      temperature: Math.round(response.data.main.temp),\n      maxTemp: Math.round(response.data.main.temp_max),\n      minTemp: Math.round(response.data.main.temp_min),\n      cityResponse: response.data.name,\n      description: response.data.weather[0].description.toUpperCase(),\n      icon: response.data.weather[0].icon,\n      humidity: response.data.main.humidity,\n      wind: Math.round(response.data.wind.speed),\n      date: response.data.dt,\n      timezone: response.data.timezone,\n      coordinates: response.data.coord\n    });\n    setReady(true);\n  } //Searching the API\n\n\n  function search() {\n    axios.get(apiUrl).then(handleResponse);\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    search(city); //Search for a city\n  } //Handling the city input\n\n\n  function changeCity(event) {\n    event.preventDefault();\n    setCity(event.target.value);\n  } //returns\n\n\n  if (ready) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"weather\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"weather-container col-md-6 col-lg-5\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-12 col-lg-12 col-12 text-center\",\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              className: \"my-3\",\n              onSubmit: handleSubmit,\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                placeholder: \"Enter a city\",\n                className: \"search-bar\",\n                onChange: changeCity\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"small-btn\",\n                children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                  icon: faSearch,\n                  size: \"1x\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 85,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"small-btn\",\n                onClick: getLocation,\n                children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                  icon: faLocationArrow,\n                  size: \"1x\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-12\",\n            children: /*#__PURE__*/_jsxDEV(WeatherInfo, {\n              data: weatherData\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-12 mt-5\",\n            children: /*#__PURE__*/_jsxDEV(WeatherForecast, {\n              coordinates: weatherData.coordinates\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this);\n  } else {\n    //Call to the API\n    search();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"weather\",\n      children: /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n_s(Weather, \"TERA4v/jcZZR0zLRxsc/ZLmzGXQ=\");\n\n_c = Weather;\n\nvar _c;\n\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"sources":["/Users/mmc/Documents/GitHub/React-project-app/src/components/Weather.js"],"names":["React","useState","axios","Loading","WeatherInfo","WeatherForecast","FontAwesomeIcon","faLocationArrow","faSearch","Weather","props","ready","setReady","weatherData","setWeatherData","city","setCity","defaultCity","unit","setUnit","apiKey","apiUrl","currentLocation","response","latitude","coords","longitude","apilGeolcationEnd","get","then","handleResponse","getLocation","event","preventDefault","navigator","geolocation","getCurrentPosition","temperature","Math","round","data","main","temp","maxTemp","temp_max","minTemp","temp_min","cityResponse","name","description","weather","toUpperCase","icon","humidity","wind","speed","date","dt","timezone","coordinates","coord","search","handleSubmit","changeCity","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"../styles/Weather.css\";\nimport Loading from \"./Loading\";\nimport WeatherInfo from \"./WeatherInfo\";\nimport WeatherForecast from \"./WeatherForecast\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLocationArrow, faSearch } from \"@fortawesome/free-solid-svg-icons\";\n\n//App starts here:\n\nexport default function Weather(props) {\n  const [ready, setReady] = useState(false);\n  const [weatherData, setWeatherData] = useState({});\n  const [city, setCity] = useState(props.defaultCity);\n  const [unit, setUnit] = useState(\"celsius\");\n  const apiKey = \"5f472b7acba333cd8a035ea85a0d4d4c\";\n  //c6457dceef34bc5b29fe61bd0c8168e1, 0603e85b4ce086e6bb52d7cdc7bcffb5, 17f56a92dfdfe63b71c98d96a2a4942a, 5f472b7acba333cd8a035ea85a0d4d4c\n  let apiUrl = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric`;\n\n  //Geolocation button\n  function currentLocation(response) {\n    let latitude = response.coords.latitude;\n    let longitude = response.coords.longitude;\n    let apilGeolcationEnd = \"https://api.openweathermap.org/data/2.5/weather\";\n    let apiUrl = `${apilGeolcationEnd}?lat=${latitude}&lon=${longitude}&appid=${apiKey}&units=metric`;\n    axios.get(apiUrl).then(handleResponse);\n  }\n\n  function getLocation(event) {\n    event.preventDefault();\n    navigator.geolocation.getCurrentPosition(currentLocation);\n  }\n\n  //Handle function for the API's Response\n  function handleResponse(response) {\n    setWeatherData({\n      temperature: Math.round(response.data.main.temp),\n      maxTemp: Math.round(response.data.main.temp_max),\n      minTemp: Math.round(response.data.main.temp_min),\n      cityResponse: response.data.name,\n      description: response.data.weather[0].description.toUpperCase(),\n      icon: response.data.weather[0].icon,\n      humidity: response.data.main.humidity,\n      wind: Math.round(response.data.wind.speed),\n      date: response.data.dt,\n      timezone: response.data.timezone,\n      coordinates: response.data.coord,\n    });\n    setReady(true);\n  }\n\n  //Searching the API\n  function search() {\n    axios.get(apiUrl).then(handleResponse);\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    search(city);\n    //Search for a city\n  }\n  //Handling the city input\n  function changeCity(event) {\n    event.preventDefault();\n    setCity(event.target.value);\n  }\n\n  //returns\n  if (ready) {\n    return (\n      <div className='weather'>\n        <div className='weather-container col-md-6 col-lg-5'>\n          <div className='row'>\n            <div className='col-md-12 col-lg-12 col-12 text-center'>\n              <form className='my-3' onSubmit={handleSubmit}>\n                <input\n                  type='text'\n                  placeholder='Enter a city'\n                  className='search-bar'\n                  onChange={changeCity}\n                />\n                <button className='small-btn'>\n                  <FontAwesomeIcon icon={faSearch} size='1x' />\n                </button>\n                <button className='small-btn' onClick={getLocation}>\n                  <FontAwesomeIcon icon={faLocationArrow} size='1x' />\n                </button>\n              </form>\n            </div>\n          </div>\n          <div className='row'>\n            <div className='col-md-12'>\n              <WeatherInfo data={weatherData} />\n            </div>\n            <div className='col-md-12 mt-5'>\n              <WeatherForecast coordinates={weatherData.coordinates} />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  } else {\n    //Call to the API\n    search();\n    return (\n      <div className='weather'>\n        <Loading />\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}