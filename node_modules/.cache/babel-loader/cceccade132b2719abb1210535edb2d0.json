{"ast":null,"code":"var _jsxFileName = \"/Users/mmc/Documents/GitHub/React-project-app/src/components/WeatherForecast.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport WeatherForecastDay from \"./WeatherForecastDay\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function WeatherForecast(props) {\n  _s();\n\n  let [loaded, setLoaded] = useState(false);\n  let [forecast, setForecast] = useState(null);\n  const apiKey = \"5f472b7acba333cd8a035ea85a0d4d4c\"; //c6457dceef34bc5b29fe61bd0c8168e1, 0603e85b4ce086e6bb52d7cdc7bcffb5, 17f56a92dfdfe63b71c98d96a2a4942a, 5f472b7acba333cd8a035ea85a0d4d4c\n\n  let lon = props.coordinates.lon;\n  let lat = props.coordinates.lat;\n  let apiUrl = `https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&appid=${apiKey}&units=metric`;\n\n  function handleResponse(response) {\n    setForecast(response.data);\n    setLoaded(true);\n  }\n\n  if (loaded && forecast.lat === lat && forecast.lon === lon) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"weatherForecast row\",\n      children: [/*#__PURE__*/_jsxDEV(WeatherForecastDay, {\n        data: forecast.daily[0]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(WeatherForecastDay, {\n        data: forecast.daily[0]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(WeatherForecastDay, {\n        data: forecast.daily[0]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(WeatherForecastDay, {\n        data: forecast.daily[0]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(WeatherForecastDay, {\n        data: forecast.daily[0]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(WeatherForecastDay, {\n        data: forecast.daily[0]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this);\n  } else {\n    axios.get(apiUrl).then(handleResponse);\n    return \"Loading\";\n  }\n}\n\n_s(WeatherForecast, \"20/pdcvQnLtcZUd5Lz9vhTDggVQ=\");\n\n_c = WeatherForecast;\n\nvar _c;\n\n$RefreshReg$(_c, \"WeatherForecast\");","map":{"version":3,"sources":["/Users/mmc/Documents/GitHub/React-project-app/src/components/WeatherForecast.js"],"names":["React","useState","axios","WeatherForecastDay","WeatherForecast","props","loaded","setLoaded","forecast","setForecast","apiKey","lon","coordinates","lat","apiUrl","handleResponse","response","data","daily","get","then"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;;AAEA,eAAe,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAAA;;AAC7C,MAAI,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,KAAD,CAAlC;AACA,MAAI,CAACO,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAMS,MAAM,GAAG,kCAAf,CAH6C,CAI7C;;AACA,MAAIC,GAAG,GAAGN,KAAK,CAACO,WAAN,CAAkBD,GAA5B;AACA,MAAIE,GAAG,GAAGR,KAAK,CAACO,WAAN,CAAkBC,GAA5B;AACA,MAAIC,MAAM,GAAI,uDAAsDD,GAAI,QAAOF,GAAI,UAASD,MAAO,eAAnG;;AAEA,WAASK,cAAT,CAAwBC,QAAxB,EAAkC;AAChCP,IAAAA,WAAW,CAACO,QAAQ,CAACC,IAAV,CAAX;AACAV,IAAAA,SAAS,CAAC,IAAD,CAAT;AACD;;AACD,MAAID,MAAM,IAAIE,QAAQ,CAACK,GAAT,KAAiBA,GAA3B,IAAkCL,QAAQ,CAACG,GAAT,KAAiBA,GAAvD,EAA4D;AAC1D,wBACE;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA,8BACE,QAAC,kBAAD;AAAoB,QAAA,IAAI,EAAEH,QAAQ,CAACU,KAAT,CAAe,CAAf;AAA1B;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,kBAAD;AAAoB,QAAA,IAAI,EAAEV,QAAQ,CAACU,KAAT,CAAe,CAAf;AAA1B;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,kBAAD;AAAoB,QAAA,IAAI,EAAEV,QAAQ,CAACU,KAAT,CAAe,CAAf;AAA1B;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE,QAAC,kBAAD;AAAoB,QAAA,IAAI,EAAEV,QAAQ,CAACU,KAAT,CAAe,CAAf;AAA1B;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE,QAAC,kBAAD;AAAoB,QAAA,IAAI,EAAEV,QAAQ,CAACU,KAAT,CAAe,CAAf;AAA1B;AAAA;AAAA;AAAA;AAAA,cALF,eAME,QAAC,kBAAD;AAAoB,QAAA,IAAI,EAAEV,QAAQ,CAACU,KAAT,CAAe,CAAf;AAA1B;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAUD,GAXD,MAWO;AACLhB,IAAAA,KAAK,CAACiB,GAAN,CAAUL,MAAV,EAAkBM,IAAlB,CAAuBL,cAAvB;AACA,WAAO,SAAP;AACD;AACF;;GA5BuBX,e;;KAAAA,e","sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport WeatherForecastDay from \"./WeatherForecastDay\";\n\nexport default function WeatherForecast(props) {\n  let [loaded, setLoaded] = useState(false);\n  let [forecast, setForecast] = useState(null);\n  const apiKey = \"5f472b7acba333cd8a035ea85a0d4d4c\";\n  //c6457dceef34bc5b29fe61bd0c8168e1, 0603e85b4ce086e6bb52d7cdc7bcffb5, 17f56a92dfdfe63b71c98d96a2a4942a, 5f472b7acba333cd8a035ea85a0d4d4c\n  let lon = props.coordinates.lon;\n  let lat = props.coordinates.lat;\n  let apiUrl = `https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&appid=${apiKey}&units=metric`;\n\n  function handleResponse(response) {\n    setForecast(response.data);\n    setLoaded(true);\n  }\n  if (loaded && forecast.lat === lat && forecast.lon === lon) {\n    return (\n      <div className='weatherForecast row'>\n        <WeatherForecastDay data={forecast.daily[0]} />\n        <WeatherForecastDay data={forecast.daily[0]} />\n        <WeatherForecastDay data={forecast.daily[0]} />\n        <WeatherForecastDay data={forecast.daily[0]} />\n        <WeatherForecastDay data={forecast.daily[0]} />\n        <WeatherForecastDay data={forecast.daily[0]} />\n      </div>\n    );\n  } else {\n    axios.get(apiUrl).then(handleResponse);\n    return \"Loading\";\n  }\n}\n"]},"metadata":{},"sourceType":"module"}