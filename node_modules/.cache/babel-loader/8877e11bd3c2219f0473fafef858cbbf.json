{"ast":null,"code":"var _jsxFileName = \"/Users/mmc/Documents/GitHub/React-project-app/src/WeatherTemperature.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function WeatherTemperature(props) {\n  _s();\n\n  const [unit, setUnit] = useState(\"metric\");\n\n  function fahrenheit() {\n    return Math.rounc(props.celsius * 9 / 5 + 32);\n  }\n\n  function showMetric(event) {\n    event.preventDefault();\n    setUnit(\"metric\");\n  }\n\n  function showFahrenheit(event) {\n    event.preventDefault();\n    setUnit(\"fahrenheit\");\n  }\n\n  if (unit === \"metric\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"weather-temperature\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"current-temp\",\n        children: [props.celsius, \"\\xB0\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"temp-btn-active\",\n        children: \"C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"temp-btn \",\n        onClick: showFahrenheit,\n        children: \"F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"weather-temperature\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"current-temp\",\n        children: [fahrenheit(), \"\\xB0\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"temp-btn\",\n        onClick: showMetric,\n        children: \"C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"temp-btn-active\",\n        children: \"F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n_s(WeatherTemperature, \"AB/bfuHj8Sm9fIZIS4h90HO2yAU=\");\n\n_c = WeatherTemperature;\n\nvar _c;\n\n$RefreshReg$(_c, \"WeatherTemperature\");","map":{"version":3,"sources":["/Users/mmc/Documents/GitHub/React-project-app/src/WeatherTemperature.js"],"names":["React","useState","WeatherTemperature","props","unit","setUnit","fahrenheit","Math","rounc","celsius","showMetric","event","preventDefault","showFahrenheit"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,eAAe,SAASC,kBAAT,CAA4BC,KAA5B,EAAmC;AAAA;;AAChD,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,QAAD,CAAhC;;AAEA,WAASK,UAAT,GAAsB;AACpB,WAAOC,IAAI,CAACC,KAAL,CAAYL,KAAK,CAACM,OAAN,GAAgB,CAAjB,GAAsB,CAAtB,GAA0B,EAArC,CAAP;AACD;;AAED,WAASC,UAAT,CAAoBC,KAApB,EAA2B;AACzBA,IAAAA,KAAK,CAACC,cAAN;AACAP,IAAAA,OAAO,CAAC,QAAD,CAAP;AACD;;AAED,WAASQ,cAAT,CAAwBF,KAAxB,EAA+B;AAC7BA,IAAAA,KAAK,CAACC,cAAN;AACAP,IAAAA,OAAO,CAAC,YAAD,CAAP;AACD;;AACD,MAAID,IAAI,KAAK,QAAb,EAAuB;AACrB,wBACE;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA,8BACE;AAAI,QAAA,SAAS,EAAC,cAAd;AAAA,mBAA8BD,KAAK,CAACM,OAApC;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,SAAS,EAAC,iBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAQ,QAAA,SAAS,EAAC,WAAlB;AAA8B,QAAA,OAAO,EAAEI,cAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AASD,GAVD,MAUO;AACL,wBACE;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA,8BACE;AAAI,QAAA,SAAS,EAAC,cAAd;AAAA,mBAA8BP,UAAU,EAAxC;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,SAAS,EAAC,UAAlB;AAA6B,QAAA,OAAO,EAAEI,UAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAKE;AAAQ,QAAA,SAAS,EAAC,iBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AASD;AACF;;GArCuBR,kB;;KAAAA,kB","sourcesContent":["import React, { useState } from \"react\";\n\nexport default function WeatherTemperature(props) {\n  const [unit, setUnit] = useState(\"metric\");\n\n  function fahrenheit() {\n    return Math.rounc((props.celsius * 9) / 5 + 32);\n  }\n\n  function showMetric(event) {\n    event.preventDefault();\n    setUnit(\"metric\");\n  }\n\n  function showFahrenheit(event) {\n    event.preventDefault();\n    setUnit(\"fahrenheit\");\n  }\n  if (unit === \"metric\") {\n    return (\n      <div className='weather-temperature'>\n        <h1 className='current-temp'>{props.celsius}°</h1>\n        <button className='temp-btn-active'>C</button>\n        <button className='temp-btn ' onClick={showFahrenheit}>\n          F\n        </button>\n      </div>\n    );\n  } else {\n    return (\n      <div className='weather-temperature'>\n        <h1 className='current-temp'>{fahrenheit()}°</h1>\n        <button className='temp-btn' onClick={showMetric}>\n          C\n        </button>\n        <button className='temp-btn-active'>F</button>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}