{"ast":null,"code":"var _jsxFileName = \"/Users/mmc/Documents/GitHub/React-project-app/src/components/WeatherForecast.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport WeatherForecastDay from \"./WeatherForecastDay\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function WeatherForecast(props) {\n  _s();\n\n  let [loaded, setLoaded] = useState(false);\n  let [forecast, setForecast] = useState(null);\n  useEffect(() => {\n    setLoaded(false);\n  }, [props.coordinates]);\n  const apiKey = \"5f472b7acba333cd8a035ea85a0d4d4c\"; //c6457dceef34bc5b29fe61bd0c8168e1, 0603e85b4ce086e6bb52d7cdc7bcffb5, 17f56a92dfdfe63b71c98d96a2a4942a, 5f472b7acba333cd8a035ea85a0d4d4c\n\n  let lon = props.coordinates.lon;\n  let lat = props.coordinates.lat;\n  let apiUrl = `https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&appid=${apiKey}&units=metric`;\n\n  function handleResponse(response) {\n    setForecast(response.data);\n    setLoaded(true);\n  }\n\n  if (loaded && forecast.lat === lat && forecast.lon === lon) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"weatherForecast row\",\n      children: forecast.daily.map(function (dailyForecast, index) {\n        if (index < 6) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col forecast\",\n            children: /*#__PURE__*/_jsxDEV(WeatherForecastDay, {\n              data: dailyForecast\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 17\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 15\n          }, this);\n        } else {\n          return null;\n        }\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this);\n  } else {\n    axios.get(apiUrl).then(handleResponse);\n    return \"Loading\";\n  }\n}\n\n_s(WeatherForecast, \"kLNsBjMbwg/21mEy29QJZwMPCGo=\");\n\n_c = WeatherForecast;\n\nvar _c;\n\n$RefreshReg$(_c, \"WeatherForecast\");","map":{"version":3,"sources":["/Users/mmc/Documents/GitHub/React-project-app/src/components/WeatherForecast.js"],"names":["React","useState","useEffect","axios","WeatherForecastDay","WeatherForecast","props","loaded","setLoaded","forecast","setForecast","coordinates","apiKey","lon","lat","apiUrl","handleResponse","response","data","daily","map","dailyForecast","index","get","then"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;;AAEA,eAAe,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAAA;;AAC7C,MAAI,CAACC,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,KAAD,CAAlC;AACA,MAAI,CAACQ,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,IAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,SAAS,CAAC,KAAD,CAAT;AACD,GAFQ,EAEN,CAACF,KAAK,CAACK,WAAP,CAFM,CAAT;AAIA,QAAMC,MAAM,GAAG,kCAAf,CAR6C,CAS7C;;AACA,MAAIC,GAAG,GAAGP,KAAK,CAACK,WAAN,CAAkBE,GAA5B;AACA,MAAIC,GAAG,GAAGR,KAAK,CAACK,WAAN,CAAkBG,GAA5B;AACA,MAAIC,MAAM,GAAI,uDAAsDD,GAAI,QAAOD,GAAI,UAASD,MAAO,eAAnG;;AAEA,WAASI,cAAT,CAAwBC,QAAxB,EAAkC;AAChCP,IAAAA,WAAW,CAACO,QAAQ,CAACC,IAAV,CAAX;AACAV,IAAAA,SAAS,CAAC,IAAD,CAAT;AACD;;AACD,MAAID,MAAM,IAAIE,QAAQ,CAACK,GAAT,KAAiBA,GAA3B,IAAkCL,QAAQ,CAACI,GAAT,KAAiBA,GAAvD,EAA4D;AAC1D,wBACE;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA,gBACGJ,QAAQ,CAACU,KAAT,CAAeC,GAAf,CAAmB,UAAUC,aAAV,EAAyBC,KAAzB,EAAgC;AAClD,YAAIA,KAAK,GAAG,CAAZ,EAAe;AACb,8BACE;AAAK,YAAA,SAAS,EAAC,cAAf;AAAA,mCACE,QAAC,kBAAD;AAAoB,cAAA,IAAI,EAAED;AAA1B;AAAA;AAAA;AAAA;AAAA;AADF,aAAmCC,KAAnC;AAAA;AAAA;AAAA;AAAA,kBADF;AAKD,SAND,MAMO;AACL,iBAAO,IAAP;AACD;AACF,OAVA;AADH;AAAA;AAAA;AAAA;AAAA,YADF;AAeD,GAhBD,MAgBO;AACLnB,IAAAA,KAAK,CAACoB,GAAN,CAAUR,MAAV,EAAkBS,IAAlB,CAAuBR,cAAvB;AACA,WAAO,SAAP;AACD;AACF;;GAtCuBX,e;;KAAAA,e","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport WeatherForecastDay from \"./WeatherForecastDay\";\n\nexport default function WeatherForecast(props) {\n  let [loaded, setLoaded] = useState(false);\n  let [forecast, setForecast] = useState(null);\n\n  useEffect(() => {\n    setLoaded(false);\n  }, [props.coordinates]);\n\n  const apiKey = \"5f472b7acba333cd8a035ea85a0d4d4c\";\n  //c6457dceef34bc5b29fe61bd0c8168e1, 0603e85b4ce086e6bb52d7cdc7bcffb5, 17f56a92dfdfe63b71c98d96a2a4942a, 5f472b7acba333cd8a035ea85a0d4d4c\n  let lon = props.coordinates.lon;\n  let lat = props.coordinates.lat;\n  let apiUrl = `https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&appid=${apiKey}&units=metric`;\n\n  function handleResponse(response) {\n    setForecast(response.data);\n    setLoaded(true);\n  }\n  if (loaded && forecast.lat === lat && forecast.lon === lon) {\n    return (\n      <div className='weatherForecast row'>\n        {forecast.daily.map(function (dailyForecast, index) {\n          if (index < 6) {\n            return (\n              <div className='col forecast' key={index}>\n                <WeatherForecastDay data={dailyForecast} />\n              </div>\n            );\n          } else {\n            return null;\n          }\n        })}\n      </div>\n    );\n  } else {\n    axios.get(apiUrl).then(handleResponse);\n    return \"Loading\";\n  }\n}\n"]},"metadata":{},"sourceType":"module"}